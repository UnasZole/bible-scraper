description: "Crampon Wikisource"
metadata:
  language: fr
  systemName: freCRAws
  title: La Sainte Bible de l'abbé Augustin Crampon
  versification: Catholic2

patterns:
  bookUrl: "https://fr.wikisource.org/wiki/Bible_Crampon_1923/{BOOK}"

args:

books:
  - osis: Gen
    names: [ Gen%C3%A8se ]
    args: { BOOK: Genèse }

  - osis: Exod
    names: [ Exode, Ex, Exod. xxx ] # FIXME: The name "Exod. xxx" is wrong, workaround to avoid crash on Heb 9,4
    args: { BOOK: Exode }

  - osis: Lev
    names: [ Lévit, Lév, Lévitique, L%C3%A9vitique ]
    args: { BOOK: Lévitique }

  - osis: Num
    names: [ Nombr, Nomb, Nombres ]
    args: { BOOK: Nombres }

  - osis: Deut
    names: [ Deutér, Deut%C3%A9ronome ]
    args: { BOOK: Deutéronome }

  - osis: Josh
    names: [ Jos, Josu%C3%A9 ]
    args: { BOOK: Josué }

  - osis: Judg
    names: [ Jug, Juges ]
    args: { BOOK: Juges }

  - osis: Ruth
    args: { BOOK: Ruth }

  - osis: 1Sam
    names: [ I Sam, 1_Samuel ]
    args: { BOOK: 1_Samuel }

  - osis: 2Sam
    names: [ II Sam, 2_Samuel ]
    args: { BOOK: 2_Samuel }

  - osis: 1Kgs
    names: [ I Rois, 1_Rois ]
    args: { BOOK: 1_Rois }

  - osis: 2Kgs
    names: [ II Rois, 2_Rois ]
    args: { BOOK: 2_Rois }

  - osis: 1Chr
    names: [ I Chron, I Par, I Paral, I. Paral, 1_Chroniques]
    args: { BOOK: 1_Chroniques }

  - osis: 2Chr
    names: [ II Chron, II Par, II Parai, II Paral, 2_Chroniques ]
    args: { BOOK: 2_Chroniques }

  - osis: Ezra
    names: [ Esdr, I Esdr, Esdras ]
    args: { BOOK: Esdras }

  - osis: Neh
    names: [ Néh, N%C3%A9h%C3%A9mie ]
    args: { BOOK: Néhémie }

  - osis: Tob
    names: [ Tobie ]
    args: { BOOK: Tobie }

  - osis: Jdt
    names: [ Judith ]
    args: { BOOK: Judith }

  - osis: Esth
    names: [ Esther ]
    args: { BOOK: Esther }

  - osis: 1Macc
    names: [ I Mach, 1_Machab%C3%A9es ]
    args: { BOOK: 1 Machabées }

  - osis: 2Macc
    names: [ II Mach, 2_Machab%C3%A9es ]
    args: { BOOK: 2 Machabées }

  - osis: Job
    args: { BOOK: Job }

  - osis: Ps
    names: [ Psaumes, Psaumes_1, Psaumes_2, Psaumes_3, Psaumes_4, Psaumes_5 ]
    pages:
      - args: { BOOK: Psaumes_1 }
      - args: { BOOK: Psaumes_2 }
      - args: { BOOK: Psaumes_3 }
      - args: { BOOK: Psaumes_4 }
      - args: { BOOK: Psaumes_5 }

  - osis: Prov
    names: [ Proverbes ]
    args: { BOOK: Proverbes }

  - osis: Eccl
    args: { BOOK: Ecclésiaste }

  - osis: Song
    args: { BOOK: Cantique }

  - osis: Wis
    names: [ Sag, Sagesse ]
    args: { BOOK: Sagesse }

  - osis: Sir
    names: [ Eccli, Eccl%C3%A9siastique ]
    args: { BOOK: Ecclésiastique }

  - osis: Isa
    names: [ Is, Isaie, Isaïe, Isa%C3%AFe ]
    args: { BOOK: Isaïe }

  - osis: Jer
    names: [ Jér, Jérémie, Jérém, J%C3%A9r%C3%A9mie ]
    args: { BOOK: Jérémie }

  - osis: Lam
    names: [ Lamentations ]
    args: { BOOK: Lamentations }

  - osis: Bar
    names: [ Baruch ]
    args: { BOOK: Baruch }

  - osis: Ezek
    names: [ Ezéch, Ezech, Ez, "%C3%89z%C3%A9chiel" ]
    args: { BOOK: Ézéchiel }

  - osis: Dan
    names: [ Daniel ]
    args: { BOOK: Daniel }

  - osis: Hos
    names: [ Os, Osée, Os%C3%A9e ]
    args: { BOOK: Osée }

  - osis: Joel
    names: [ Joël, Jo%C3%ABl ]
    args: { BOOK: Joël }

  - osis: Amos
    args: { BOOK: Amos }

  - osis: Obad
    names: [ Abdias ]
    args: { BOOK: Abdias }

  - osis: Jonah
    names: [ Jon, Jonas ]
    args: { BOOK: Jonas }

  - osis: Mic
    names: [ Mich, Michée, Mich%C3%A9e ]
    args: { BOOK: Michée }

  - osis: Nah
    names: [ Nahum ]
    args: { BOOK: Nahum }

  - osis: Hab
    names: [ Habacuc ]
    args: { BOOK: Habacuc }

  - osis: Zeph
    names: [ Soph, Sophonie ]
    args: { BOOK: Sophonie }

  - osis: Hag
    names: [ Agg, Agg%C3%A9e ]
    args: { BOOK: Aggée }

  - osis: Zech
    names: [ Zach, Zacharie ]
    args: { BOOK: Zacharie }

  - osis: Mal
    names: [ Malach, Malachie ]
    args: { BOOK: Malachie }

  - osis: Matt
    names: [ Matth, Matthieu ]
    args: { BOOK: Matthieu }

  - osis: Mark
    names: [ Marc ]
    args: { BOOK: Marc }

  - osis: Luke
    names: [ Luc, S. Luc ]
    args: { BOOK: Luc }

  - osis: John
    names: [ Jean ]
    args: { BOOK: Jean }

  - osis: Acts
    names: [ Act, Actes ]
    args: { BOOK: Actes }

  - osis: Rom
    names: [ Romains ]
    args: { BOOK: Romains }

  - osis: 1Cor
    names: [ I Cor, 1_Corinthiens ]
    args: { BOOK: 1_Corinthiens }

  - osis: 2Cor
    names: [ 2 Cor, II Cor, 2_Corinthiens ]
    args: { BOOK: 2_Corinthiens }

  - osis: Gal
    names: [ Galates ]
    args: { BOOK: Galates }

  - osis: Eph
    names: [ Ep, Ephés, Ephes, "%C3%89ph%C3%A9siens" ]
    args: { BOOK: Éphésiens }

  - osis: Phil
    names: [ Philipp, Philip, Philippiens ]
    args: { BOOK: Philippiens }

  - osis: Col
    names: [ Colos, Colossiens ]
    args: { BOOK: Colossiens }

  - osis: 1Thess
    names: [ I Thess, 1_Thessaloniciens ]
    args: { BOOK: 1_Thessaloniciens }

  - osis: 2Thess
    names: [ II Thess, 2_Thessaloniciens ]
    args: { BOOK: 2_Thessaloniciens }

  - osis: 1Tim
    names: [ I Tim, 1_Timoth%C3%A9e ]
    args: { BOOK: 1_Timothée }

  - osis: 2Tim
    names: [ II Tim, 2_Timoth%C3%A9e ]
    args: { BOOK: 2_Timothée }

  - osis: Titus
    names: [ Tit, Tite ]
    args: { BOOK: Tite }

  - osis: Phlm
    args: { BOOK: Philémon }

  - osis: Heb
    names: [ Hebr, Hébr, H%C3%A9breux ]
    args: { BOOK: Hébreux }

  - osis: Jas
    names: [ Jac, Jacq, Jacques ]
    args: { BOOK: Jacques }

  - osis: 1Pet
    names: [ I Pierre, I Petr, I Pier, 1_Pierre ]
    args: { BOOK: 1_Pierre }

  - osis: 2Pet
    names: [ II Pier, 2_Pierre ]
    args: { BOOK: 2_Pierre }

  - osis: 1John
    names: [ I Jean, 1_Jean ]
    args: { BOOK: 1_Jean }

  - osis: 2John
    args: { BOOK: 2_Jean }

  - osis: 3John
    args: { BOOK: 3_Jean }

  - osis: Jude
    args: { BOOK: Jude }

  - osis: Rev
    names: [ Apoc, Ap, Apocalypse ]
    args: { BOOK: Apocalypse }


elements:

  - selector: ".prp-pages-output h2"
    withAncestors: [ BOOK_TITLE ]
    contexts:
      - type: TEXT
        op: text
      - type: TEXT
        op: "literal= "

  - selector: ".prp-pages-output h3"
    withAncestors: [ MAJOR_SECTION_TITLE ]
    contexts:
      - type: TEXT
        op: text
      - type: TEXT
        op: "literal= "

  - selector: ".prp-pages-output h4"
    withAncestors: [ SECTION_TITLE ]
    contexts:
      - type: TEXT
        op: text
      - type: TEXT
        op: "literal= "

  - selector: "div.alineanegatif"
    withAncestors: [ MINOR_SECTION_TITLE ]
    contexts:
      - type: TEXT
        op: text
      - type: TEXT
        op: "literal= "

  - selector: ".prp-pages-output div > a:matches((?:Chapitre|Psaume) (\\d+)[^\\d]*)"
    contexts:
      - type: CHAPTER
        op: text
        regexp: (?:Chapitre|Psaume) (\d+)[^\d]*

  - selector: ".prp-pages-output p"
    contexts:
      - type: PARAGRAPH_BREAK


nodeParsers:
  - selector: ".prp-pages-output p:matches(^.*[^\\s].*$)"
    withAncestors: [ CHAPTER ]

    nodes:
      # All text nodes within the paragraph must be taken entirely as normal text.
      - withAncestors: [ INLINE_TEXT ]
        withoutAncestors: [ STRUCTURE_MARKER, NOTE, MARKUP ]
        contexts:
          - type: TEXT
            regexp: (.*)

    elements:
      # Start of a new paragraph denotes a paragraph break ONLY if it's not a poem formatting, or a spacer (ie empty paragraph)
      - selector: ":not(div.poem) > p:not(:matches(^\\s*$))"
        contexts:
          - type: PARAGRAPH_BREAK

      # Poem paragraph start means start of the first poetry line.
      - selector: "div.poem > p"
        contexts:
          - type: POETRY_LINE_INDENT
            op: literal=1

      # Line breaks within a poem denote a new poetry line.
      - selector: ".prp-pages-output div.poem > p > br"
        contexts:
          - type: POETRY_LINE_INDENT
            op: literal=1

      - selector: ":is(sup.verset-num, span.sidenote-left > small)"
        contexts:
          - type: VERSE
            op: ownText

      # Lettrine and small caps must be taken as normal text.
      - selector: "span.lettrine + span"
        withAncestors: [ INLINE_TEXT ]
        withoutAncestors: [ STRUCTURE_MARKER, NOTE, MARKUP ]
        contexts:
          - type: TEXT
            op: text
      - selector: "span.sc"
        withAncestors: [ INLINE_TEXT ]
        withoutAncestors: [ STRUCTURE_MARKER, NOTE, MARKUP ]
        contexts:
          - type: TEXT
            op: text

      - selector: "i"
        contexts:
          - type: TRANSLATION_ADD
            descendants:
              - type: TEXT
                op: text

    nodeParsers:
      - selector: "sup.reference > a"
        linkTargetSelector: "> span.reference-text"
        nodes:
          # All text nodes within the note must be taken entirely as normal text.
          - withoutAncestors: [ NOTE_MARKUP ]
            contexts:
              - type: TEXT
                regexp: (.*)
        elements:
          # The opening span marks the opening of the note context.
          - selector: "span.reference-text"
            contexts:
              - type: NOTE
          # Other spans, sups and such are just formatting, register the text.
          - selector: "span.reference-text > :is(span, sup)"
            contexts:
              - type: TEXT
                op: text
          # Italic elements in notes are usually quotes.
          - selector: "span.reference-text > i ~ i"
            contexts:
              - type: QUOTE
                descendants:
                  - type: TEXT
                    op: text
          # But the first italic element of the note is the catchphrase.
          - selector: "span.reference-text > i"
            contexts:
              - type: CATCHPHRASE
                descendants:
                  - type: TEXT
                    op: text

          # Links are references to parse.

          # Links containing a path followed by a "#Bible_Crampon_1923" anchor, with text containing a sequence of numbers, are full references to verses.
          - selector: "a[href~=^.*/[^/]+#Bible_Crampon_1923/.+CH\\d+$]:matches(^.*\\d[\\d-]*.*$)"
            contexts:
              - type: REFERENCE
                descendants:
                  - type: FULL_REF
                    descendants:
                      - type: REF_BOOK
                        op: attribute=href
                        regexp: "^.*/([^/]+)#Bible_Crampon_1923/.+CH\\d+$"
                      - type: REF_CHAPTER
                        op: attribute=href
                        regexp: "^.*/[^/]+#Bible_Crampon_1923/.+CH(\\d+)$"
                      - type: REF_VERSES
                        op: text
                        regexp: "^.*[^\\d]+(\\d[\\d-]*)[^\\d]*$"
                  - type: TEXT
                    op: text
          # Links containing a path followed by a "#Bible_Crampon_1923" anchor, with text not containing a sequence of numbers, are full references to chapters.
          - selector: "a[href~=^.*/[^/]+#Bible_Crampon_1923/.+CH\\d+$]:not(:matches(^.*\\d[\\d-]*.*$))"
            contexts:
              - type: REFERENCE
                descendants:
                  - type: FULL_REF
                    descendants:
                      - type: REF_BOOK
                        op: attribute=href
                        regexp: "^.*/([^/]+)#Bible_Crampon_1923/.+CH\\d+$"
                      - type: REF_CHAPTER
                        op: attribute=href
                        regexp: "^.*/[^/]+#Bible_Crampon_1923/.+CH(\\d+)$"
                  - type: TEXT
                    op: text

          # Links containing a path followed by a #1-2 anchor are full references to a verse.
          - selector: "a[href~=^.*Bible_Crampon_1923/[^/]+#\\d+-\\d+$]"
            contexts:
              - type: REFERENCE
                descendants:
                  - type: FULL_REF
                    descendants:
                      - type: REF_BOOK
                        op: attribute=href
                        regexp: "^.*Bible_Crampon_1923/([^/]+)#\\d+-\\d+$"
                      - type: REF_CHAPTER
                        op: attribute=href
                        regexp: "^.*Bible_Crampon_1923/[^/]+#(\\d+)-\\d+$"
                      - type: REF_VERSES
                        op: attribute=href
                        regexp: "^.*Bible_Crampon_1923/[^/]+#\\d+-(\\d+)$"
                  - type: TEXT
                    op: text

          # Links that are not inside Crampon should be taken as just text.
          - selector: "a:not([href~=^.*Bible_Crampon_1923.*$])"
            contexts:
              - type: TEXT
                op: text
